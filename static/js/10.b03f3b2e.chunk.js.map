{"version":3,"file":"static/js/10.b03f3b2e.chunk.js","mappings":"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","sources":["components/Api.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f18e42173aa93d2e63f9c91aa9147cf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n// У цій роботі будуть використовуватися наступні ендпоінти.\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/{time_window}\nexport const getMoviesTrending = async () => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get('trending/movie/day');\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//api.themoviedb.org/3/movie/{movie_id}\nexport const getMovieDetails = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie\nexport const searchMovies = async ({ query }) => {\n  try {\n    console.log(axios.defaults);\n\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    console.log(data);\n\n    // return data.results;\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    console.log(data);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport const getMovieReviews = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// Приклад cURL\n\n// curl --request GET \\\n//      --url 'https://api.themoviedb.org/3/movie/11?api_key=f18e42173aa93d2e63f9c91aa9147cf6'\n\n// Більше того, ви можете надсилати кілька запитів, просто розділяючи значення комами:\n// приклад\n// https://api.themoviedb.org/3/movie/157336?api_key=f18e42173aa93d2e63f9c91aa9147cf6&append_to_response=videos,images\n\n// 'https://api.themoviedb.org/3/trending/all/day?language=en-US', options;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Searchbar_input__19umw\"};","import css from './Searchbar.module.css';\n// import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { searchMovies } from \"components/Api\"\n\nfunction Searchbar({ setSearchParams, onSubmit, setMovies }) {\n  const [query, setQuery] = useState('');\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const results = await searchMovies({ query });\n      console.log(results);\n      setMovies(results);\n    } catch (error) {\n      console.log('error', error);\n    }\n    // todo: зберігати стейт в батьківський компонент про фільм\n\n    // searchMovies({ query });\n  };\n\n\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <div className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n        ></input>\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n}\nexport default Searchbar;\n","// import css from './Movies.module.css';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'components/Api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const curentQuery = searchParams.get('query');\n    if (!curentQuery) return;\n\n    const fetchMovies = async () => {\n      try {\n        const results = await searchMovies(curentQuery);\n        setMovies(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    fetchMovies();\n  }, [searchParams]);\n  console.log(movies);\n\n  \n\n  const handleFormSubmit = ({ query }) => {\n    setSearchParams(query);\n  };\n\n  return (\n    <div>\n      <Searchbar\n        setSearchParams={setSearchParams}\n        onSubmit={handleFormSubmit}\n        setMovies={setMovies}\n      />\n\n      <>\n        {movies && movies.results && (\n          <ul>\n            {movies.results.map(result => {\n              return (\n                <li key={result.id}>\n                  <NavLink to={`${result.id}`}>\n                    <p>{result.original_title}</p>\n                  </NavLink>\n                </li>\n              );\n            })}{' '}\n            {/* movies={movies} */}\n          </ul>\n        )}\n      </>\n    </div>\n  );\n}\n"],"names":["axios","api_key","language","getMoviesTrending","console","log","data","results","error","getMovieDetails","movieId","searchMovies","query","getMovieCredits","cast","getMovieReviews","setSearchParams","onSubmit","setMovies","useState","setQuery","event","preventDefault","className","css","onChange","value","target","name","type","autoComplete","autoFocus","placeholder","Movies","movies","useSearchParams","searchParams","useEffect","curentQuery","get","fetchMovies","map","result","to","id","original_title"],"sourceRoot":""}