{"version":3,"file":"static/js/736.d990cdc2.chunk.js","mappings":"+SAKAA,EAAAA,EAAAA,SAAAA,QAFiB,gCAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALU,mCAMVC,SAAU,SAOL,IAAMC,EAAiB,mCAAG,sGAE7BC,QAAQC,IAAIL,EAAAA,EAAAA,UAFiB,SAGNA,EAAAA,EAAAA,IAAU,sBAHJ,uBAGrBM,EAHqB,EAGrBA,KACRF,QAAQC,IAAIC,GAJiB,kBAKtBA,EAAKC,SALiB,yCAO7BH,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAPC,kBAQtB,IARsB,0DAAH,qDAcjBC,EAAe,mCAAG,WAAMC,GAAN,yFAE3BN,QAAQC,IAAIL,EAAAA,EAAAA,UAFe,SAGJA,EAAAA,EAAAA,IAAA,gBAAmBU,IAHf,uBAGnBJ,EAHmB,EAGnBA,KACRF,QAAQC,IAAIC,GAJe,kBAKpBA,GALoB,yCAO3BF,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAPD,kBAQpB,IARoB,0DAAH,sDAcfG,EAAY,mCAAG,gGAASC,EAAT,EAASA,MAAT,kBAEDZ,EAAAA,EAAAA,IAAA,6BAAgCY,IAF/B,uBAEhBN,EAFgB,EAEhBA,KACRF,QAAQC,IAAIC,GAHY,kBAIjBA,GAJiB,yCAMxBF,QAAQC,IAAI,QAAS,CAAEG,MAAK,OANJ,kBAOjB,IAPiB,0DAAH,sDAaZK,EAAe,mCAAG,WAAMH,GAAN,kGAEJV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KACRF,QAAQC,IAAIC,GAHe,kBAIpBA,EAAKQ,MAJe,uCAM3BV,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAND,kBAOpB,IAPoB,yDAAH,sDAafO,EAAe,mCAAG,WAAML,GAAN,kGAEJV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KACRF,QAAQC,IAAIC,GAHe,kBAIpBA,EAAKC,SAJe,uCAM3BH,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAND,kBAOpB,IAPoB,yDAAH,qD,qICnEfQ,EAAgBC,EAAAA,EAAAA,IAAH,6IASbC,EAAWD,EAAAA,EAAAA,GAAH,iQAaRE,EAAWF,EAAAA,EAAAA,GAAH,qFAMRG,EAAgBH,EAAAA,EAAAA,EAAH,sE,oCClBX,SAASI,IACtB,IAAQX,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA6Ba,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKhB,EAAL,CACA,IAAMiB,EAAS,mCAAG,8GAEKd,EAAAA,EAAAA,IAAgBH,GAFrB,OAERI,EAFQ,OAGdW,EAAUX,GAHI,gDAKdV,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAC5BiB,EAAU,IANI,yDAAH,qDASfE,GAVoB,CAWrB,GAAE,CAACjB,KAGF,0BACE,SAACM,EAAD,UACGQ,GACCA,EAAQI,OAAS,GACjBJ,EAAQK,KAAI,SAAAC,GACV,OACE,UAACZ,EAAD,YACE,gBACEa,MAAM,QACNC,OAAO,QACPC,IACEH,EAAOI,aAAP,8CAC2CJ,EAAOI,cAC9C,oBAENC,IAAKL,EAAOM,QAEd,SAACjB,EAAD,UAAWW,EAAOM,QAClB,SAAChB,EAAD,UAAgBU,EAAOO,cAZVP,EAAOQ,GAezB,OAIV,C","sources":["components/Api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f18e42173aa93d2e63f9c91aa9147cf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n// У цій роботі будуть використовуватися наступні ендпоінти.\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/{time_window}\nexport const getMoviesTrending = async () => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get('trending/movie/day');\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//api.themoviedb.org/3/movie/{movie_id}\nexport const getMovieDetails = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie\nexport const searchMovies = async ({ query }) => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    console.log(data);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  gap: 4px;\n  padding: 10px;\nflex-direction: column;\n  font-size: 24px;\n  border-radius: 9px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  transition: transform 0.3s ease;\ntext-align: center;\n  display: block;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastName = styled.h3`\n  margin: 10px 0;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n    margin-bottom: 10px;\n`;\n\n","import {\n  CastContainer,\n  CastItem,\n  CastName,\n  CastCharacter,\n} from './Cast.styled';\nimport PropTypes from 'prop-types';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'components/Api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredit] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        const cast = await getMovieCredits(movieId);\n        setCredit(cast);\n      } catch (error) {\n        console.log('error', { error });\n        setCredit([]);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastContainer>\n        {credits &&\n          credits.length > 0 &&\n          credits.map(credit => {\n            return (\n              <CastItem key={credit.id}>\n                <img\n                  width=\"100px\"\n                  height=\"150px\"\n                  src={\n                    credit.profile_path\n                      ? `https://image.tmdb.org/t/p/original/${credit.profile_path}`\n                      : 'default-image-url'\n                  }\n                  alt={credit.name}\n                />\n                <CastName>{credit.name}</CastName>\n                <CastCharacter>{credit.character}</CastCharacter>\n              </CastItem>\n            );\n          })}\n      </CastContainer>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["axios","api_key","language","getMoviesTrending","console","log","data","results","error","getMovieDetails","movieId","searchMovies","query","getMovieCredits","cast","getMovieReviews","CastContainer","styled","CastItem","CastName","CastCharacter","Cast","useParams","useState","credits","setCredit","useEffect","fetchCast","length","map","credit","width","height","src","profile_path","alt","name","character","id"],"sourceRoot":""}