{"version":3,"file":"static/js/544.8d1a2b85.chunk.js","mappings":"+SAKAA,EAAAA,EAAAA,SAAAA,QAFiB,gCAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALU,mCAMVC,SAAU,SAOL,IAAMC,EAAiB,mCAAG,sGAE7BC,QAAQC,IAAIL,EAAAA,EAAAA,UAFiB,SAGNA,EAAAA,EAAAA,IAAU,sBAHJ,uBAGrBM,EAHqB,EAGrBA,KACRF,QAAQC,IAAIC,GAJiB,kBAKtBA,EAAKC,SALiB,yCAO7BH,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAPC,kBAQtB,IARsB,0DAAH,qDAcjBC,EAAe,mCAAG,WAAMC,GAAN,yFAE3BN,QAAQC,IAAIL,EAAAA,EAAAA,UAFe,SAGJA,EAAAA,EAAAA,IAAA,gBAAmBU,IAHf,uBAGnBJ,EAHmB,EAGnBA,KACRF,QAAQC,IAAIC,GAJe,kBAKpBA,GALoB,yCAO3BF,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAPD,kBAQpB,IARoB,0DAAH,sDAcfG,EAAY,mCAAG,gGAASC,EAAT,EAASA,MAAT,SAExBR,QAAQC,IAAIL,EAAAA,EAAAA,UAFY,SAIDA,EAAAA,EAAAA,IAAA,6BAAgCY,IAJ/B,uBAIhBN,EAJgB,EAIhBA,KACRF,QAAQC,IAAIC,GALY,kBAQjBA,GARiB,yCAUxBF,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAVJ,kBAWjB,IAXiB,0DAAH,sDAiBZK,EAAe,mCAAG,WAAMH,GAAN,kGAEJV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KACRF,QAAQC,IAAIC,GAHe,kBAIpBA,EAAKQ,MAJe,uCAM3BV,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAND,kBAOpB,IAPoB,yDAAH,sDAafO,EAAe,mCAAG,WAAML,GAAN,yFAE3BN,QAAQC,IAAIL,EAAAA,EAAAA,UAFe,SAGJA,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aAHI,uBAGnBJ,EAHmB,EAGnBA,KACRF,QAAQC,IAAIC,GAJe,kBAKpBA,EAAKC,SALe,yCAO3BH,QAAQC,IAAI,QAAS,CAAEG,MAAK,OAPD,kBAQpB,IARoB,0DAAH,qD,8ICpEb,SAASQ,IAEtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAQ,mCAAG,8GAEgBrB,EAAAA,EAAAA,MAFhB,OAELsB,EAFK,OAGXF,EAAUE,GAHC,gDAKXJ,GAAW,GALA,yBAOXF,GAAa,GAPF,4EAAH,qDAgBd,OAJAO,EAAAA,EAAAA,YAAU,WAAQF,GAAY,GAAE,IAEhCpB,QAAQC,IAAIiB,GAERJ,EACK,kBAGLE,EACK,iCAIP,4BACE,4CAEA,wBACGE,EAAOK,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACE,wBAAKF,EAAMG,SADyBH,EAAME,GAD7B,QAQxB,C","sources":["components/Api.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f18e42173aa93d2e63f9c91aa9147cf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n// У цій роботі будуть використовуватися наступні ендпоінти.\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/{time_window}\nexport const getMoviesTrending = async () => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get('trending/movie/day');\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//api.themoviedb.org/3/movie/{movie_id}\nexport const getMovieDetails = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie\nexport const searchMovies = async ({ query }) => {\n  try {\n    console.log(axios.defaults);\n\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    console.log(data);\n\n    // return data.results;\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    console.log(data);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport const getMovieReviews = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// Приклад cURL\n\n// curl --request GET \\\n//      --url 'https://api.themoviedb.org/3/movie/11?api_key=f18e42173aa93d2e63f9c91aa9147cf6'\n\n// Більше того, ви можете надсилати кілька запитів, просто розділяючи значення комами:\n// приклад\n// https://api.themoviedb.org/3/movie/157336?api_key=f18e42173aa93d2e63f9c91aa9147cf6&append_to_response=videos,images\n\n// 'https://api.themoviedb.org/3/trending/all/day?language=en-US', options;\n","// import css from './Home.module.css';\nimport { getMoviesTrending } from '../../components/Api';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function Home() {\n  // HTTP запит, домашня сторінка зі списком популярних кінофільмів\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const fechData = async () =>  {\n      try {\n        const LoadedMovies = await getMoviesTrending();\n        setMovies(LoadedMovies);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n  }\n  \n  \n  useEffect(() => { fechData() }, []);\n  \n  console.log(movies);\n\n  if (isLoading) {\n    return 'Loading data...';\n  }\n\n  if (isError) {\n    return 'Error while loading movies...';\n  }\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n\n      <ul>\n        {movies.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <li>{movie.title}</li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","api_key","language","getMoviesTrending","console","log","data","results","error","getMovieDetails","movieId","searchMovies","query","getMovieCredits","cast","getMovieReviews","Home","useState","isLoading","setIsLoading","isError","setIsError","movies","setMovies","fechData","LoadedMovies","useEffect","map","movie","to","id","title"],"sourceRoot":""}