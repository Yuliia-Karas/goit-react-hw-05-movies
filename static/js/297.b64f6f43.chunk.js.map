{"version":3,"file":"static/js/297.b64f6f43.chunk.js","mappings":"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","sources":["components/Api.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f18e42173aa93d2e63f9c91aa9147cf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n// У цій роботі будуть використовуватися наступні ендпоінти.\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/{time_window}\nexport const getMoviesTrending = async () => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get('trending/movie/day');\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//api.themoviedb.org/3/movie/{movie_id}\nexport const getMovieDetails = async movieId => {\n  try {\n    console.log(axios.defaults);\n    const { data } = await axios.get(`movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie\nexport const searchMovies = async ({ query }) => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    console.log(data);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const SearchbarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 40px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 0.5rem;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const SearchButton = styled.button`\n  margin-left: 0.5rem;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  background-color: #b4afaf;\n  color: black;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: pink;\n  }\n`;","import { useState } from 'react';\nimport {\n  SearchbarContainer,\n  SearchInput,\n  SearchButton,\n} from './Searchbar.styled';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ setSearchParams }) {\n  const [query, setQuery] = useState('');\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setSearchParams({ query });\n    console.log(event.target.value);\n    // todo: зберігати стейт в батьківський компонент про фільм\n  }\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <SearchbarContainer>\n      <form onSubmit={handleSubmit}>\n        <SearchInput\n          onChange={handleInputChange}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n        ></SearchInput>\n        <SearchButton type=\"submit\">\n          <span>Search</span>\n        </SearchButton>\n      </form>\n    </SearchbarContainer>\n  );\n}\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  setSearchParams: PropTypes.func,\n  onSubmit: PropTypes.func,\n  setMovies: PropTypes.func,\n};\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'components/Api';\nimport PropTypes from 'prop-types';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  useEffect(() => {\n    const curentQuery = searchParams.get('query') ?? '';\n\n    if (!curentQuery) return;\n\n    const fetchMovies = async () => {\n      try {\n        const results = await searchMovies({ query: curentQuery });\n        setMovies(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    fetchMovies();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Searchbar setSearchParams={setSearchParams} />\n\n      <>\n        {movies && movies.results && (\n          <ul>\n            {movies.results.map(result => {\n              return (\n                <li key={result.id}>\n                  <NavLink to={`${result.id}`} state={{ from: location }}>\n                    <p>{result.original_title}</p>\n                  </NavLink>\n                </li>\n              );\n            })}{' '}\n          </ul>\n        )}\n      </>\n    </div>\n  );\n}\n\nMovies.propTypes = {\n  searchMovies: PropTypes.func,\n};\n"],"names":["axios","api_key","language","getMoviesTrending","console","log","data","results","error","getMovieDetails","movieId","searchMovies","query","getMovieCredits","cast","getMovieReviews","SearchbarContainer","styled","SearchInput","SearchButton","setSearchParams","useState","setQuery","event","preventDefault","target","value","onSubmit","onChange","e","name","type","autoComplete","autoFocus","placeholder","Movies","movies","setMovies","useSearchParams","searchParams","location","useLocation","useEffect","curentQuery","get","fetchMovies","map","result","to","id","state","from","original_title"],"sourceRoot":""}